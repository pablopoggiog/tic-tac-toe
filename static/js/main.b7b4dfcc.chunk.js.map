{"version":3,"sources":["lib/index.ts","lib/utils/index.ts","lib/constants/index.ts","components/Board/styles.ts","components/Board/index.tsx","components/Game/styles.ts","components/Game/index.tsx","hooks/useGame/index.ts","hooks/useBot/index.ts","components/Toggler/styles.ts","components/Toggler/index.tsx","components/SocialMedia/styles.ts","components/SocialMedia/index.tsx","components/Animation/styles.ts","components/Animation/index.tsx","theme/index.ts","App.tsx","index.tsx"],"names":["checkWinner","squares","selected","initialState","flip","Container","styled","div","InnerContainer","rotate","keyframes","Square","button","css","theme","body","Board","handleClick","disabled","Array","fill","map","_","index","onClick","background","Button","Game","toggleTheme","useState","turn","setTurn","winner","setWinner","animation","setAnimation","JSON","parse","stringify","setSquares","playSquare","newSquares","setTimeout","someoneWon","resetGame","useGame","chooseAnEmptySquare","useCallback","random","Math","floor","play","useEffect","console","log","useBot","toggleBorder","text","Toggler","SocialMediaContainer","SocialMedia","FacebookShareButton","url","quote","FacebookIcon","size","round","TwitterShareButton","title","TwitterIcon","active","popUp","Icon","span","Animation","lightTheme","darkTheme","App","setTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7b4dfcc.chunk.js","sourcesContent":["export * from \"./utils\";\r\nexport * from \"./types\";\r\nexport * from \"./constants\";\r\n","import { squaresType } from \"..\";\r\n\r\nexport const checkWinner = (squares: squaresType) => {\r\n  if (\r\n    squares[0].selected &&\r\n    squares[0].selected === squares[1].selected &&\r\n    squares[1].selected === squares[2].selected\r\n  )\r\n    return squares[0].selected;\r\n  else if (\r\n    squares[3].selected &&\r\n    squares[3].selected === squares[4].selected &&\r\n    squares[4].selected === squares[5].selected\r\n  )\r\n    return squares[3].selected;\r\n  else if (\r\n    squares[6].selected &&\r\n    squares[6].selected === squares[7].selected &&\r\n    squares[7].selected === squares[8].selected\r\n  )\r\n    return squares[6].selected;\r\n  else if (\r\n    squares[0].selected &&\r\n    squares[0].selected === squares[3].selected &&\r\n    squares[3].selected === squares[6].selected\r\n  )\r\n    return squares[0].selected;\r\n  else if (\r\n    squares[1].selected &&\r\n    squares[1].selected === squares[4].selected &&\r\n    squares[4].selected === squares[7].selected\r\n  )\r\n    return squares[1].selected;\r\n  else if (\r\n    squares[2].selected &&\r\n    squares[2].selected === squares[5].selected &&\r\n    squares[5].selected === squares[8].selected\r\n  )\r\n    return squares[2].selected;\r\n  else if (\r\n    squares[0].selected &&\r\n    squares[0].selected === squares[4].selected &&\r\n    squares[4].selected === squares[8].selected\r\n  )\r\n    return squares[0].selected;\r\n  else if (\r\n    squares[2].selected &&\r\n    squares[2].selected === squares[4].selected &&\r\n    squares[4].selected === squares[6].selected\r\n  )\r\n    return squares[2].selected;\r\n};\r\n","export const initialState = [\r\n  { flip: false, selected: null },\r\n  {\r\n    flip: false,\r\n    selected: null,\r\n  },\r\n  {\r\n    flip: false,\r\n    selected: null,\r\n  },\r\n  {\r\n    flip: false,\r\n    selected: null,\r\n  },\r\n  {\r\n    flip: false,\r\n    selected: null,\r\n  },\r\n  {\r\n    flip: false,\r\n    selected: null,\r\n  },\r\n  {\r\n    flip: false,\r\n    selected: null,\r\n  },\r\n  {\r\n    flip: false,\r\n    selected: null,\r\n  },\r\n  {\r\n    flip: false,\r\n    selected: null,\r\n  },\r\n];\r\n","import styled, { keyframes, css } from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const InnerContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(3, 1fr);\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 1em;\r\n  width: 90%;\r\n  height: 90vw;\r\n  justify-self: center;\r\n  padding-top: 1em;\r\n\r\n  @media (min-aspect-ratio: 3/4) {\r\n    width: 50vh;\r\n    height: 50vh;\r\n  }\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\ninterface SquareProps {\r\n  flip: boolean;\r\n}\r\n\r\nexport const Square = styled.button<SquareProps>`\r\n  display: flex;\r\n  background: linear-gradient(to right, #4a00e0, #8e2de2);\r\n  animation: ${({ flip }) => (flip ? css`2s ${rotate} 1` : \"\")};\r\n  border-radius: 1em;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: none;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  & > p {\r\n    font-size: 40px;\r\n    margin: 0;\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.body};\r\n  }\r\n`;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Container, InnerContainer, Square } from \"./styles\";\r\nimport { squaresType } from \"../../lib\";\r\n\r\ninterface BoardProps {\r\n  handleClick: (index: number) => void;\r\n  squares: squaresType;\r\n  disabled: boolean;\r\n}\r\n\r\nexport const Board: FunctionComponent<BoardProps> = ({\r\n  handleClick,\r\n  squares,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <InnerContainer>\r\n          {Array(9)\r\n            .fill(null)\r\n            .map((_, index) => (\r\n              <Square\r\n                key={index}\r\n                onClick={() => handleClick(index)}\r\n                flip={squares[index].flip}\r\n                disabled={disabled}\r\n              >\r\n                <p>{squares[index].selected}</p>\r\n              </Square>\r\n            ))}\r\n        </InnerContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  gap: 8vh;\r\n  background-color: ${({ theme }) => theme.background};\r\n  transition: 1s;\r\n\r\n  @media (max-aspect-ratio: 3/4) {\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 1em;\r\n  margin: 2em auto;\r\n  background: #8e2de2;\r\n  border-radius: 1em;\r\n  border: none;\r\n  font-weight: 600;\r\n  width: 140px;\r\n  opacity: 0.9;\r\n  transition: 0.9s;\r\n  color: white;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n    background: #4a00e0;\r\n  }\r\n\r\n  &:focus {\r\n    outline: 0;\r\n    background: #4a00e0;\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useGame, useBot } from \"src/hooks\";\r\nimport { Board, Toggler, SocialMedia, Animation } from \"..\";\r\nimport { Container, Button } from \"./styles\";\r\n\r\ninterface GameProps {\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport const Game: FunctionComponent<GameProps> = ({ toggleTheme }) => {\r\n  const {\r\n    animation,\r\n    winner,\r\n    squares,\r\n    handleClick,\r\n    resetGame,\r\n    turn,\r\n  } = useGame();\r\n  useBot(squares, turn, handleClick);\r\n\r\n  return (\r\n    <Container>\r\n      <Toggler toggleTheme={toggleTheme} />\r\n      <Animation animation={animation} winner={winner} />\r\n      <Board handleClick={handleClick} disabled={!!winner} squares={squares} />\r\n\r\n      <Button onClick={resetGame}>New Game</Button>\r\n\r\n      <SocialMedia />\r\n    </Container>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { squaresType, Turn, initialState, checkWinner } from \"src/lib\";\r\n\r\nexport const useGame = () => {\r\n  const [turn, setTurn] = useState<number>(0);\r\n\r\n  const [winner, setWinner] = useState<Turn>(null);\r\n\r\n  const [animation, setAnimation] = useState<string>(\"\");\r\n\r\n  const [squares, setSquares] = useState<squaresType>(\r\n    JSON.parse(JSON.stringify(initialState)) // i have to use these 2 JSON methods to pass a full new objet as initial state,\r\n  ); // otherwise because of the nesting levels it'll have weird behaviours muting initialState const value during the app usage\r\n\r\n  const playSquare = (index: number) => {\r\n    if (!squares[index].selected) {\r\n      setTurn(turn + 1);\r\n\r\n      const newSquares = [...squares];\r\n\r\n      newSquares[index].flip = true;\r\n\r\n      newSquares[index].selected = turn % 2 ? \"X\" : \"O\";\r\n\r\n      setSquares([...newSquares]);\r\n\r\n      setTimeout(() => {\r\n        newSquares[index].flip = false;\r\n\r\n        setSquares([...newSquares]);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const handleClick = (index: number) => {\r\n    !winner && playSquare(index);\r\n\r\n    const someoneWon = checkWinner(squares);\r\n\r\n    if (someoneWon) {\r\n      setWinner(someoneWon);\r\n\r\n      setAnimation(\"winner\");\r\n\r\n      setTimeout(() => {\r\n        setAnimation(\"\");\r\n      }, 4500);\r\n    }\r\n\r\n    if (turn === 9) {\r\n      setAnimation(\"tie\");\r\n\r\n      setTimeout(() => {\r\n        setAnimation(\"\");\r\n      }, 4500);\r\n    }\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setAnimation(\"reset\");\r\n\r\n    setTimeout(() => {\r\n      setAnimation(\"\");\r\n    }, 4500);\r\n\r\n    setWinner(null);\r\n\r\n    setTurn(0);\r\n\r\n    setTimeout(() => {\r\n      setSquares(JSON.parse(JSON.stringify(initialState)));\r\n    }, 2200);\r\n  };\r\n\r\n  return {\r\n    animation,\r\n    winner,\r\n    squares,\r\n    handleClick,\r\n    resetGame,\r\n    playSquare,\r\n    turn,\r\n  };\r\n};\r\n","import { useEffect, useCallback } from \"react\";\r\nimport { squaresType } from \"src/lib\";\r\n\r\nexport const useBot = (squares: squaresType, turn: any, handleClick: any) => {\r\n  const chooseAnEmptySquare = useCallback(() => {\r\n    let random = Math.floor(Math.random() * 8);\r\n\r\n    if (!squares[random].selected) handleClick(random);\r\n    else chooseAnEmptySquare();\r\n  }, [handleClick, squares]);\r\n\r\n  const play = useCallback(\r\n    () => setTimeout(() => chooseAnEmptySquare(), 2000),\r\n    [chooseAnEmptySquare]\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(turn);\r\n    turn % 2 && turn < 9 && play();\r\n  }, [turn, play]);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  background: ${({ theme }) => theme.background};\r\n  border: 1px solid ${({ theme }) => theme.toggleBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  padding: 0.6rem;\r\n  width: 150px;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Button } from \"./styles\";\r\n\r\ninterface TogglerProps {\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport const Toggler: FunctionComponent<TogglerProps> = ({ toggleTheme }) => (\r\n  <Button onClick={toggleTheme}>Switch Theme</Button>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SocialMediaContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  align-self: center;\r\n  width: 30%;\r\n\r\n  @media (min-aspect-ratio: 3/4) {\r\n    width: 200px;\r\n  }\r\n\r\n  & > button:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n    FacebookShareButton,\r\n    TwitterShareButton,\r\n    FacebookIcon,\r\n    TwitterIcon,\r\n  } from \"react-share\";\r\n  import {\r\n    SocialMediaContainer,\r\n  } from \"./styles\";\r\n  \r\n\r\nexport const SocialMedia = () => {\r\n  return (\r\n    <SocialMediaContainer>\r\n      <FacebookShareButton\r\n        url=\"https://pablopoggiog.github.io/tic-tac-toe\"\r\n        quote=\"This is a pretty good game, check it out!\"\r\n      >\r\n        <FacebookIcon size={32} round />\r\n      </FacebookShareButton>\r\n      <TwitterShareButton\r\n        url=\"https://pablopoggiog.github.io/tic-tac-toe\"\r\n        title=\"This is a pretty good game, check it out!\"\r\n      >\r\n        <TwitterIcon size={32} round />\r\n      </TwitterShareButton>\r\n    </SocialMediaContainer>\r\n  );\r\n};\r\n","import styled, { css, keyframes } from \"styled-components\";\r\n\r\nexport const Container = styled.div<{ active: boolean }>`\r\n  visibility: hidden;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  animation: ${({ active }) =>\r\n    active\r\n      ? css`\r\n          ${popUp} 2s ease 0s 2 alternate\r\n        `\r\n      : \"\"};\r\n  z-index: ${({ active }) => (active ? 1 : 0)};\r\n  background-color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  & > p {\r\n    font-size: 40px;\r\n    margin: 0;\r\n    font-weight: 600;\r\n    background: -webkit-linear-gradient(#eee, #333);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n  }\r\n\r\n  & > span {\r\n    font-size: 28px;\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Icon = styled.span``;\r\n\r\nconst popUp = keyframes`\r\n    from {\r\n        visibility: visible;\r\n        opacity: 0;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    to {\r\n        visibility: visible;\r\n        opacity: 1;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n}`;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Turn } from \"src/lib\";\r\nimport { Container, Icon } from \"./styles\";\r\n\r\ninterface AnimationProps {\r\n  animation: string;\r\n  winner: Turn;\r\n}\r\n\r\nexport const Animation: FunctionComponent<AnimationProps> = ({\r\n  animation,\r\n  winner,\r\n}) => {\r\n  return (\r\n    <Container active={!!animation}>\r\n      <Icon>🎈</Icon>\r\n      {animation === \"winner\" ? (\r\n        <p> PLAYER {winner} WON </p>\r\n      ) : animation === \"tie\" ? (\r\n        <p> GAME TIED! </p>\r\n      ) : (\r\n        <p> LET'S PLAY! </p>\r\n      )}\r\n      <Icon>🥳</Icon>\r\n    </Container>\r\n  );\r\n};\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"lightGrey\",\r\n  background: \"white\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#FAFAFA\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"#363537\",\r\n};\r\n","import React, { useState, FunctionComponent } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Game } from \"src/components\";\r\nimport { ThemeType } from \"src/lib\";\r\nimport { lightTheme, darkTheme } from \"src/theme\";\r\n\r\nconst App: FunctionComponent = () => {\r\n  const [theme, setTheme] = useState<ThemeType>(\"dark\");\r\n\r\n  const themeToggler = () =>\r\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n      <Game toggleTheme={themeToggler} />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}